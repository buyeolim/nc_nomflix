{"version":3,"sources":["assets/noPoster.png","components/Section.js","components/Loader.js","components/Message.js","components/Poster.js","routes/Home/HomePresenter.js","api.js","routes/Home/index.js","routes/Home/HomeContainer.js","routes/Tv/TvPresenter.js","routes/Tv/index.js","routes/Tv/TvContainer.js","routes/Search/SearchPresenter.js","routes/Search/index.js","routes/Search/SearchContainer.js","components/Header.js","routes/Detail/DetailPresenter.js","routes/Detail/index.js","routes/Detail/DetailContainer.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","append_to_responese","term","query","encodeURIComponent","tvApi","HomeConatiner","state","a","data","results","this","setState","React","Component","TvPresenter","topRated","airingToday","tv","name","first_air_date","TvContainer","componentDidMount","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","number_of_episodes","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","Tv","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e0dd069e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPoster.ed99f23e.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n  color: rgba(255, 255, 255, 0.2);\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      LOADING...\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 2px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPoster.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 16 ? `${title.substring(0, 16)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: process.env.REACT_APP_API_KEY,\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_responese: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_responese: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeConatiner from \"./HomeContainer\";\n\nexport default HomeConatiner;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({ error: \"Can't find movies information.\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../components/Section\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst TvPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today Shows\">\n            {airingToday.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTvPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TvPresenter;\n","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;\n","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TvPresenter from \"./TvPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TvPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../components/Loader\";\nimport Section from \"../../components/Section\";\nimport Message from \"../../components/Message\";\nimport Poster from \"../../components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((tv) => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#9b59b6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-litem: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 99;\n`;\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 55px);\n  width: 100%;\n  padding: 50px;\n  position: relative;\n`;\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(5px) grayscale(1);\n  opacity: 0.2;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n  z-index: 0;\n`;\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 25px;\n`;\nconst Title = styled.span`\n  font-size: 30px;\n`;\nconst ItemContainer = styled.div`\n  margin: 12px 0;\n`;\nconst Item = styled.span`\n  font-size: 15px;\n  opacity: 0.5;\n`;\nconst Divider = styled.span`\n  margin: 0 6px;\n  opacity: 0.5;\n`;\nconst Overview = styled.p`\n  font-size: 20px;\n  opacity: 0.7;\n  line-height: 1.3;\n  width: 75%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.title ? result.title : result.name} | Nomflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPoster.png\").default\n          }\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime\n                ? `${result.runtime} min`\n                : `EP 1 - ${result.number_of_episodes} (${result.episode_run_time[0]} min)`}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const parsedId = parseInt(id);\n    const { isMovie } = this.state;\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Tv from \"../routes/Tv\";\nimport Search from \"../routes/Search\";\nimport Header from \"./Header\";\nimport Detail from \"../routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={Tv} />\n        <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 55px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}